{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\xamp\\\\htdocs\\\\MusicPlayer\\\\src\\\\components\\\\LibrarySong.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  let {\n    song,\n    setCurrentSong,\n    audioRef,\n    isPlaying,\n    songs,\n    setSongs\n  } = _ref;\n\n  // Function\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    const curSong = song;\n    const songList = songs;\n    const newSongs = songList.map(song => {\n      if (song.id === curSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LibrarySongContainer, {\n    onClick: songSelectHandler,\n    isActive: song.active,\n    children: [/*#__PURE__*/_jsxDEV(Img, {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(LibrarySongDescription, {\n      children: [/*#__PURE__*/_jsxDEV(H1, {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(H2, {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_c = LibrarySong;\nconst LibrarySongContainer = styled.div`\n\tpadding: 0 2rem 0 2rem;\n\theight: 100px;\n\twidth: 100%;\n\tdisplay: flex;\n\ttransition: all 0.3s ease;\n\tbackground-color: ${p => p.isActive ? \"pink\" : \"white\"};\n\t&:hover {\n\t\tbackground-color: lightblue;\n\t\ttransition: all 0.3s ease;\n\t}\n\t&.active {\n\t\tbackground-color: pink;\n\t}\n`;\n_c2 = LibrarySongContainer;\nconst LibrarySongDescription = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n_c3 = LibrarySongDescription;\nconst Img = styled.img`\n\tmargin: 20px 0;\n\theight: 60px;\n`;\n_c4 = Img;\nconst H1 = styled.h3`\n\tpadding-left: 1rem;\n\tfont-size: 1rem;\n`;\n_c5 = H1;\nconst H2 = styled.h4`\n\tpadding-left: 1rem;\n\tfont-size: 0.7rem;\n`;\n_c6 = H2;\nexport default LibrarySong;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"LibrarySong\");\n$RefreshReg$(_c2, \"LibrarySongContainer\");\n$RefreshReg$(_c3, \"LibrarySongDescription\");\n$RefreshReg$(_c4, \"Img\");\n$RefreshReg$(_c5, \"H1\");\n$RefreshReg$(_c6, \"H2\");","map":{"version":3,"sources":["C:/xampp/xamp/htdocs/MusicPlayer/src/components/LibrarySong.js"],"names":["React","styled","LibrarySong","song","setCurrentSong","audioRef","isPlaying","songs","setSongs","songSelectHandler","curSong","songList","newSongs","map","id","active","current","play","cover","name","artist","LibrarySongContainer","div","p","isActive","LibrarySongDescription","Img","img","H1","h3","H2","h4"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,WAAW,GAAG,QAAoE;AAAA,MAAnE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,cAAR;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA,SAAlC;AAA6CC,IAAAA,KAA7C;AAAoDC,IAAAA;AAApD,GAAmE;;AACvF;AACA,QAAMC,iBAAiB,GAAG,YAAY;AACrC,UAAML,cAAc,CAACD,IAAD,CAApB;AACA,UAAMO,OAAO,GAAGP,IAAhB;AACA,UAAMQ,QAAQ,GAAGJ,KAAjB;AAEA,UAAMK,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAcV,IAAD,IAAU;AACvC,UAAIA,IAAI,CAACW,EAAL,KAAYJ,OAAO,CAACI,EAAxB,EAA4B;AAC3B,eAAO,EACN,GAAGX,IADG;AAENY,UAAAA,MAAM,EAAE;AAFF,SAAP;AAIA,OALD,MAKO;AACN,eAAO,EACN,GAAGZ,IADG;AAENY,UAAAA,MAAM,EAAE;AAFF,SAAP;AAIA;AACD,KAZgB,CAAjB;AAaAP,IAAAA,QAAQ,CAACI,QAAD,CAAR;;AAEA,QAAIN,SAAJ,EAAe;AACdD,MAAAA,QAAQ,CAACW,OAAT,CAAiBC,IAAjB;AACA;AACD,GAvBD;;AAyBA,sBACC,QAAC,oBAAD;AAAsB,IAAA,OAAO,EAAER,iBAA/B;AAAkD,IAAA,QAAQ,EAAEN,IAAI,CAACY,MAAjE;AAAA,4BACC,QAAC,GAAD;AAAK,MAAA,GAAG,EAAEZ,IAAI,CAACe,KAAf;AAAsB,MAAA,GAAG,EAAEf,IAAI,CAACgB;AAAhC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,sBAAD;AAAA,8BACC,QAAC,EAAD;AAAA,kBAAKhB,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,EAAD;AAAA,kBAAKhB,IAAI,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CApCD;;KAAMlB,W;AAqCN,MAAMmB,oBAAoB,GAAGpB,MAAM,CAACqB,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA,qBAAsBC,CAAD,IAAQA,CAAC,CAACC,QAAF,GAAa,MAAb,GAAsB,OAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMH,oB;AAgBN,MAAMI,sBAAsB,GAAGxB,MAAM,CAACqB,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,CANA;MAAMG,sB;AAQN,MAAMC,GAAG,GAAGzB,MAAM,CAAC0B,GAAI;AACvB;AACA;AACA,CAHA;MAAMD,G;AAKN,MAAME,EAAE,GAAG3B,MAAM,CAAC4B,EAAG;AACrB;AACA;AACA,CAHA;MAAMD,E;AAKN,MAAME,EAAE,GAAG7B,MAAM,CAAC8B,EAAG;AACrB;AACA;AACA,CAHA;MAAMD,E;AAKN,eAAe5B,WAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LibrarySong = ({ song, setCurrentSong, audioRef, isPlaying, songs, setSongs }) => {\n\t// Function\n\tconst songSelectHandler = async () => {\n\t\tawait setCurrentSong(song);\n\t\tconst curSong = song;\n\t\tconst songList = songs;\n\n\t\tconst newSongs = songList.map((song) => {\n\t\t\tif (song.id === curSong.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: false,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tsetSongs(newSongs);\n\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.play();\n\t\t}\n\t};\n\n\treturn (\n\t\t<LibrarySongContainer onClick={songSelectHandler} isActive={song.active}>\n\t\t\t<Img src={song.cover} alt={song.name}></Img>\n\t\t\t<LibrarySongDescription>\n\t\t\t\t<H1>{song.name}</H1>\n\t\t\t\t<H2>{song.artist}</H2>\n\t\t\t</LibrarySongDescription>\n\t\t</LibrarySongContainer>\n\t);\n};\nconst LibrarySongContainer = styled.div`\n\tpadding: 0 2rem 0 2rem;\n\theight: 100px;\n\twidth: 100%;\n\tdisplay: flex;\n\ttransition: all 0.3s ease;\n\tbackground-color: ${(p) => (p.isActive ? \"pink\" : \"white\")};\n\t&:hover {\n\t\tbackground-color: lightblue;\n\t\ttransition: all 0.3s ease;\n\t}\n\t&.active {\n\t\tbackground-color: pink;\n\t}\n`;\n\nconst LibrarySongDescription = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n\nconst Img = styled.img`\n\tmargin: 20px 0;\n\theight: 60px;\n`;\n\nconst H1 = styled.h3`\n\tpadding-left: 1rem;\n\tfont-size: 1rem;\n`;\n\nconst H2 = styled.h4`\n\tpadding-left: 1rem;\n\tfont-size: 0.7rem;\n`;\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}