{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\xamp\\\\htdocs\\\\react-music-player-production\\\\src\\\\components\\\\Song.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport db from \"../firebase/firebaseConfig\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Song = _ref => {\n  _s();\n\n  let {\n    currentSong\n  } = _ref;\n  const [info, setInfo] = useState([]); // Start the fetch operation as soon as\n  // the page loads\n\n  window.addEventListener('load', () => {\n    Fetchdata();\n  }); // Fetch the required data using the get() method\n\n  const Fetchdata = () => {\n    db.collection(\"items\").get().then(querySnapshot => {\n      // Loop through the data and store\n      // it in array to display\n      querySnapshot.forEach(element => {\n        var data = element.data();\n        setInfo(arr => [...arr, data]);\n      });\n    });\n  };\n\n  return info.map(data => /*#__PURE__*/_jsxDEV(Frame, {\n    name: data.Nane\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this));\n};\n\n_s(Song, \"dGO925bTaYMky6ehmBXKgUu7n/s=\");\n\n_c = Song;\nconst SongContainer = styled.div`\n\tmargin-top: 10vh;\n\tmin-height: 50vh;\n\tmax-height: 60vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n`;\nconst Img = styled.img`\n\twidth: 20%;\n\tborder-radius: 50%;\n\t@media screen and (max-width: 768px) {\n\t\twidth: 50%;\n\t}\n`;\nconst H1 = styled.h2`\n\tpadding: 3rem 1rem 1rem 1rem;\n`;\nconst H2 = styled.h3`\n\tfont-size: 1rem;\n`;\nexport default Song;\n\nvar _c;\n\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"sources":["C:/xampp/xamp/htdocs/react-music-player-production/src/components/Song.js"],"names":["React","useState","styled","db","Link","Song","currentSong","info","setInfo","window","addEventListener","Fetchdata","collection","get","then","querySnapshot","forEach","element","data","arr","map","Nane","SongContainer","div","Img","img","H1","h2","H2","h3"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,4BAAf;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAIA,MAAMC,IAAI,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAElC,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC,CAFkC,CAI9B;AACA;;AACAQ,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AAClCC,IAAAA,SAAS;AACV,GAFH,EAN8B,CAU9B;;AACA,QAAMA,SAAS,GAAG,MAAI;AAClBR,IAAAA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GAA6BC,IAA7B,CAAmCC,aAAD,IAAmB;AAEjD;AACA;AACAA,MAAAA,aAAa,CAACC,OAAd,CAAsBC,OAAO,IAAI;AAC7B,YAAIC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAX;AACAV,QAAAA,OAAO,CAACW,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAAUD,IAAV,CAAR,CAAP;AAEH,OAJD;AAKH,KATD;AAUH,GAXD;;AAaH,SAEWX,IAAI,CAACa,GAAL,CAAUF,IAAD,iBACT,QAAC,KAAD;AACO,IAAA,IAAI,EAAEA,IAAI,CAACG;AADlB;AAAA;AAAA;AAAA;AAAA,UADA,CAFX;AAWA,CAnCD;;GAAMhB,I;;KAAAA,I;AAqCN,MAAMiB,aAAa,GAAGpB,MAAM,CAACqB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMC,GAAG,GAAGtB,MAAM,CAACuB,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,EAAE,GAAGxB,MAAM,CAACyB,EAAG;AACrB;AACA,CAFA;AAIA,MAAMC,EAAE,GAAG1B,MAAM,CAAC2B,EAAG;AACrB;AACA,CAFA;AAIA,eAAexB,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport db from \"../firebase/firebaseConfig\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Song = ({ currentSong }) => {\n\t\nconst [info , setInfo] = useState([]);\n\n    // Start the fetch operation as soon as\n    // the page loads\n    window.addEventListener('load', () => {\n        Fetchdata();\n      });\n\n    // Fetch the required data using the get() method\n    const Fetchdata = ()=>{\n        db.collection(\"items\").get().then((querySnapshot) => {\n\n            // Loop through the data and store\n            // it in array to display\n            querySnapshot.forEach(element => {\n                var data = element.data();\n                setInfo(arr => [...arr , data]);\n\n            });\n        })\n    }\n\n\treturn (\n       \n            info.map((data) => (\n            <Frame \n                   name={data.Nane} \n                   />\n            ))\n        \n    );\n\n\t\n};\n\nconst SongContainer = styled.div`\n\tmargin-top: 10vh;\n\tmin-height: 50vh;\n\tmax-height: 60vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nconst Img = styled.img`\n\twidth: 20%;\n\tborder-radius: 50%;\n\t@media screen and (max-width: 768px) {\n\t\twidth: 50%;\n\t}\n`;\n\nconst H1 = styled.h2`\n\tpadding: 3rem 1rem 1rem 1rem;\n`;\n\nconst H2 = styled.h3`\n\tfont-size: 1rem;\n`;\n\nexport default Song;\n"]},"metadata":{},"sourceType":"module"}